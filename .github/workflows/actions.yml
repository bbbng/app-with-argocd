# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ secrets.GH_USER }}/app-with-argocd
        ref: main
        token: ${{ secrets.GTOKEN }} # git commit, push에 사용할 token. pull에는 필요 없음

    - run: mkdir ./src/main/resources
    - run: touch ./src/main/resources/application.properties
    - run: echo "${{ secrets.APPLICATION }}" >> ./src/main/resources/application.properties
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

    - name: Login to docker hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Setup docker buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USER }}/app-with-actions:${{ github.sha }}

    - name: github checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ secrets.GH_USER }}/app-with-argocd
        ref: main
        token: ${{ secrets.GTOKEN }} # git commit, push에 사용할 token. pull에는 필요 없음

    - name: Update deployment.yaml # update deployment yaml file to nginx:latest
      run: |
        sed -i "s%image: ${{ secrets.DOCKERHUB_USER }}/app-with-actions:[A-z0-9]*%image: ${{ secrets.DOCKERHUB_USER }}/app-with-actions:${{ github.sha }}%" ./manifest/argocd-deployment.yaml

    - name: Commit and push changes # 수정한 deployment.yaml을 git에 commit, push
      run: |
        git config --local user.email heoseonho@gmail.com
        git config --local user.name bbbng
        git add .
        git commit -m "Update app image to latest"
        git push
